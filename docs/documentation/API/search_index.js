var documenterSearchIndex = {"docs":
[{"location":"renderer_js.html#","page":"-","title":"-","text":"CurrentModule = Renderer.Js","category":"page"},{"location":"renderer_js.html#","page":"-","title":"-","text":"","category":"page"},{"location":"renderer_js.html#","page":"-","title":"-","text":"","category":"page"},{"location":"responses.html#","page":"Responses","title":"Responses","text":"CurrentModule = Responses","category":"page"},{"location":"responses.html#","page":"Responses","title":"Responses","text":"","category":"page"},{"location":"responses.html#","page":"Responses","title":"Responses","text":"","category":"page"},{"location":"sessions.html#","page":"Sessions","title":"Sessions","text":"CurrentModule = Sessions","category":"page"},{"location":"sessions.html#","page":"Sessions","title":"Sessions","text":"","category":"page"},{"location":"sessions.html#","page":"Sessions","title":"Sessions","text":"Session\r\nid\r\nstart\r\nset!\r\nget\r\nget!!\r\nunset!\r\nisset\r\nsession","category":"page"},{"location":"sessions.html#Genie.Sessions.Session","page":"Sessions","title":"Genie.Sessions.Session","text":"mutable struct Session\n\nRepresents a session object\n\n\n\n\n\n","category":"type"},{"location":"sessions.html#Genie.Sessions.id","page":"Sessions","title":"Genie.Sessions.id","text":"id() :: String\n\nGenerates a new session id.\n\n\n\n\n\nid(payload::Union{HTTP.Request,HTTP.Response}) :: String\n\nAttempts to retrieve the session id from the provided payload object. If that is not available, a new session id is created.\n\n\n\n\n\nid(req::HTTP.Request, res::HTTP.Response) :: String\n\nAttempts to retrieve the session id from the provided request and response objects. If that is not available, a new session id is created.\n\n\n\n\n\n","category":"function"},{"location":"sessions.html#Genie.Sessions.start","page":"Sessions","title":"Genie.Sessions.start","text":"start(session_id::String, req::HTTP.Request, res::HTTP.Response; options = Dict{String,String}()) :: Tuple{Session,HTTP.Response}\n\nInitiates a new HTTP session with the provided session_id.\n\nArguments\n\nsession_id::String: the id of the session object\nreq::HTTP.Request: the request object\nres::HTTP.Response: the response object\noptions::Dict{String,String}: extra options for setting the session cookie, such as Path and HttpOnly\n\n\n\n\n\nstart(req::HTTP.Request, res::HTTP.Response; options::Dict{String,String} = Dict{String,String}()) :: Session\n\nInitiates a new default session object, generating a new session id.\n\nArguments\n\nreq::HTTP.Request: the request object\nres::HTTP.Response: the response object\noptions::Dict{String,String}: extra options for setting the session cookie, such as Path and HttpOnly\n\n\n\n\n\n","category":"function"},{"location":"sessions.html#Genie.Sessions.set!","page":"Sessions","title":"Genie.Sessions.set!","text":"set!(s::Session, key::Symbol, value::Any) :: Session\n\nStores value as key on the Session object s.\n\n\n\n\n\n","category":"function"},{"location":"sessions.html#Genie.Sessions.get","page":"Sessions","title":"Genie.Sessions.get","text":"get(s::Session, key::Symbol) :: Union{Nothing,Any}\n\nReturns the value stored on the Session object s as key, wrapped in a Union{Nothing,Any}.\n\n\n\n\n\nget(s::Session, key::Symbol, default::T) :: T where T\n\nAttempts to retrive the value stored on the Session object s as key. If the value is not set, it returns the default.\n\n\n\n\n\n","category":"function"},{"location":"sessions.html#Genie.Sessions.unset!","page":"Sessions","title":"Genie.Sessions.unset!","text":"unset!(s::Session, key::Symbol) :: Session\n\nRemoves the value stored on the Session s as key.\n\n\n\n\n\n","category":"function"},{"location":"sessions.html#Genie.Sessions.isset","page":"Sessions","title":"Genie.Sessions.isset","text":"isset(s::Session, key::Symbol) :: Bool\n\nChecks wheter or not key exists on the Session s.\n\n\n\n\n\n","category":"function"},{"location":"sessions.html#Genie.Sessions.session","page":"Sessions","title":"Genie.Sessions.session","text":"session(params::Dict{Symbol,Any}) :: Sessions.Session\n\nReturns the Session object associated with the current HTTP request.\n\n\n\n\n\n","category":"function"},{"location":"renderer.html#","page":"Renderer","title":"Renderer","text":"CurrentModule = Renderer","category":"page"},{"location":"renderer.html#","page":"Renderer","title":"Renderer","text":"","category":"page"},{"location":"renderer.html#","page":"Renderer","title":"Renderer","text":"WebRenderable\r\nrender\r\nredirect\r\nhasrequested\r\nrespond\r\nregistervars\r\ninjectvars\r\nview_file_info\r\nvars_signature\r\nfunction_name\r\nm_name\r\nbuild_is_stale\r\nbuild_module\r\npreparebuilds\r\npurgebuilds\r\nchangebuilds\r\nvars\r\nset_negotiated_content\r\nnegotiate_content","category":"page"},{"location":"renderer.html#Genie.Renderer.WebRenderable","page":"Renderer","title":"Genie.Renderer.WebRenderable","text":"mutable struct WebRenderable\n\nRepresents an object that can be rendered on the web as a HTTP Response\n\n\n\n\n\n","category":"type"},{"location":"renderer.html#Genie.Renderer.redirect","page":"Renderer","title":"Genie.Renderer.redirect","text":"Sets redirect headers and prepares the Response.\n\n\n\n\n\n","category":"function"},{"location":"renderer.html#Genie.Renderer.hasrequested","page":"Renderer","title":"Genie.Renderer.hasrequested","text":"hasrequested(content_type::Symbol) :: Bool\n\nChecks wheter or not the requested content type matches content_type.\n\n\n\n\n\n","category":"function"},{"location":"renderer.html#Genie.Renderer.respond","page":"Renderer","title":"Genie.Renderer.respond","text":"Constructs a Response corresponding to the Content-Type of the request.\n\n\n\n\n\n","category":"function"},{"location":"renderer.html#Genie.Renderer.registervars","page":"Renderer","title":"Genie.Renderer.registervars","text":"registervars(vars...) :: Nothing\n\nLoads the rendering vars into the task's scope\n\n\n\n\n\n","category":"function"},{"location":"renderer.html#Genie.Renderer.view_file_info","page":"Renderer","title":"Genie.Renderer.view_file_info","text":"view_file_info(path::String, supported_extensions::Vector{String}) :: Tuple{String,String}\n\nExtracts path and extension info about a file\n\n\n\n\n\n","category":"function"},{"location":"renderer.html#Genie.Renderer.function_name","page":"Renderer","title":"Genie.Renderer.function_name","text":"function_name(file_path::String)\n\nGenerates function name for generated HTML+Julia views.\n\n\n\n\n\n","category":"function"},{"location":"renderer.html#Genie.Renderer.m_name","page":"Renderer","title":"Genie.Renderer.m_name","text":"m_name(file_path::String)\n\nGenerates module name for generated HTML+Julia views.\n\n\n\n\n\n","category":"function"},{"location":"renderer.html#Genie.Renderer.build_is_stale","page":"Renderer","title":"Genie.Renderer.build_is_stale","text":"build_is_stale(file_path::String, build_path::String) :: Bool\n\nChecks if the view template has been changed since the last time the template was compiled.\n\n\n\n\n\n","category":"function"},{"location":"renderer.html#Genie.Renderer.build_module","page":"Renderer","title":"Genie.Renderer.build_module","text":"build_module(content::String, path::String, mod_name::String) :: String\n\nPersists compiled Julia view data to file and returns the path\n\n\n\n\n\n","category":"function"},{"location":"renderer.html#Genie.Renderer.preparebuilds","page":"Renderer","title":"Genie.Renderer.preparebuilds","text":"preparebuilds() :: Bool\n\nSets up the build folder and the build module file for generating the compiled views.\n\n\n\n\n\n","category":"function"},{"location":"renderer.html#Genie.Renderer.negotiate_content","page":"Renderer","title":"Genie.Renderer.negotiate_content","text":"negotiate_content(req::Request, res::Response, params::Params) :: Response\n\nComputes the content-type of the Response, based on the information in the Request.\n\n\n\n\n\n","category":"function"},{"location":"filetemplates.html#","page":"FileTemplates","title":"FileTemplates","text":"CurrentModule = FileTemplates","category":"page"},{"location":"filetemplates.html#","page":"FileTemplates","title":"FileTemplates","text":"","category":"page"},{"location":"filetemplates.html#","page":"FileTemplates","title":"FileTemplates","text":"newtask\r\nnewcontroller\r\nnewtest\r\nappmodule\r\ndockerfile","category":"page"},{"location":"filetemplates.html#Genie.FileTemplates.newtask","page":"FileTemplates","title":"Genie.FileTemplates.newtask","text":"newtask(module_name::String) :: String\n\nDefault content for a new Genie Toolbox task.\n\n\n\n\n\n","category":"function"},{"location":"filetemplates.html#Genie.FileTemplates.newcontroller","page":"FileTemplates","title":"Genie.FileTemplates.newcontroller","text":"newcontroller(controller_name::String) :: String\n\nDefault content for a new Genie controller.\n\n\n\n\n\n","category":"function"},{"location":"filetemplates.html#Genie.FileTemplates.newtest","page":"FileTemplates","title":"Genie.FileTemplates.newtest","text":"newtest(plural_name::String, singular_name::String) :: String\n\nDefault content for a new test file.\n\n\n\n\n\n","category":"function"},{"location":"filetemplates.html#Genie.FileTemplates.appmodule","page":"FileTemplates","title":"Genie.FileTemplates.appmodule","text":"appmodule(path::String)\n\nGenerates a custom app module when a new app is bootstrapped.\n\n\n\n\n\n","category":"function"},{"location":"filetemplates.html#Genie.FileTemplates.dockerfile","page":"FileTemplates","title":"Genie.FileTemplates.dockerfile","text":"dockerfile(; user::String = \"genie\", supervisor::Bool = false, nginx::Bool = false, env::String = \"dev\",\n                  filename::String = \"Dockerfile\", port::Int = 8000, dockerport::Int = 80, host::String = \"0.0.0.0\",\n                  websockets_port::Int = 8001, websockets_dockerport::Int = 8001)\n\nGenerates dockerfile for the Genie app.\n\n\n\n\n\n","category":"function"},{"location":"assets.html#","page":"Assets","title":"Assets","text":"CurrentModule = Assets","category":"page"},{"location":"assets.html#","page":"Assets","title":"Assets","text":"","category":"page"},{"location":"assets.html#","page":"Assets","title":"Assets","text":"include_asset\r\ncss_asset\r\njs_asset\r\njs_settings\r\nembedded\r\nchannels\r\nchannels_script\r\nchannels_support\r\nfavicon_support","category":"page"},{"location":"assets.html#Genie.Assets.include_asset","page":"Assets","title":"Genie.Assets.include_asset","text":"include_asset(asset_type::Union{String,Symbol}, file_name::Union{String,Symbol};\n              fingerprinted::Bool = Genie.config.assets_fingerprinted) :: String\n\nReturns the path to an asset. asset_type can be one of :js, :css. The file_name should not include the extension. fingerprinted is a Bool indicating if a fingerprint (unique hash) should be added to the asset's filename (used in production to invalidate caches).\n\n\n\n\n\n","category":"function"},{"location":"assets.html#Genie.Assets.css_asset","page":"Assets","title":"Genie.Assets.css_asset","text":"css_asset(file_name::String; fingerprinted::Bool = Genie.config.assets_fingerprinted) :: String\n\nPath to a css asset. The file_name should not include the extension. fingerprinted is a Bool indicating if a fingerprint (unique hash) should be added to the asset's filename (used in production to invalidate caches).\n\n\n\n\n\n","category":"function"},{"location":"assets.html#Genie.Assets.js_asset","page":"Assets","title":"Genie.Assets.js_asset","text":"js_asset(file_name::String; fingerprinted::Bool = Genie.config.assets_fingerprinted) :: String\n\nPath to a js asset. file_name should not include the extension. fingerprinted is a Bool indicating if a fingerprint (unique hash) should be added to the asset's filename (used in production to invalidate caches).\n\n\n\n\n\n","category":"function"},{"location":"assets.html#Genie.Assets.js_settings","page":"Assets","title":"Genie.Assets.js_settings","text":"js_settings() :: string\n\nSets up a window.Genie.Settings JavaScript object which exposes relevant Genie app settings from Genie.config\n\n\n\n\n\n","category":"function"},{"location":"assets.html#Genie.Assets.embedded","page":"Assets","title":"Genie.Assets.embedded","text":"embeded(path::String) :: String\n\nReads and outputs the file at path within Genie's root package dir\n\n\n\n\n\n","category":"function"},{"location":"assets.html#Genie.Assets.channels","page":"Assets","title":"Genie.Assets.channels","text":"channels() :: String\n\nOutputs the channels.js file included with the Genie package\n\n\n\n\n\n","category":"function"},{"location":"assets.html#Genie.Assets.channels_script","page":"Assets","title":"Genie.Assets.channels_script","text":"channels_script() :: String\n\nOutputs the channels JavaScript content within <script>...</script> tags, for embedding into the page.\n\n\n\n\n\n","category":"function"},{"location":"assets.html#Genie.Assets.channels_support","page":"Assets","title":"Genie.Assets.channels_support","text":"channels_support() :: String\n\nProvides full web channels support, setting up routes for loading support JS files, web sockets subscription and returning the <script> tag for including the linked JS file into the web page.\n\n\n\n\n\n","category":"function"},{"location":"assets.html#Genie.Assets.favicon_support","page":"Assets","title":"Genie.Assets.favicon_support","text":"favicon_support() :: String\n\nOutputs the <link> tag for referencing the favicon file embedded with Genie.\n\n\n\n\n\n","category":"function"},{"location":"tester.html#","page":"Tester","title":"Tester","text":"CurrentModule = Tester","category":"page"},{"location":"tester.html#","page":"Tester","title":"Tester","text":"","category":"page"},{"location":"tester.html#","page":"Tester","title":"Tester","text":"bootstrap_tests\r\nreset_db\r\nrun_all_tests\r\nset_test_env","category":"page"},{"location":"deploy_docker.html#","page":"Deploy Docker","title":"Deploy Docker","text":"CurrentModule = Deploy.Docker","category":"page"},{"location":"deploy_docker.html#","page":"Deploy Docker","title":"Deploy Docker","text":"","category":"page"},{"location":"deploy_docker.html#","page":"Deploy Docker","title":"Deploy Docker","text":"dockerfile\r\nbuild\r\nrun","category":"page"},{"location":"deploy_docker.html#Genie.Deploy.Docker.dockerfile","page":"Deploy Docker","title":"Genie.Deploy.Docker.dockerfile","text":"dockerfile(path::String = \".\"; user::String = \"genie\", env::String = \"dev\",\n          filename::String = \"Dockerfile\", port::Int = 8000, dockerport::Int = 80, force::Bool = false)\n\nGenerates a Dockerfile optimised for containerizing Genie apps.\n\nArguments\n\npath::String: where to generate the file\nfilename::String: the name of the file (default Dockerfile)\nuser::String: the name of the system user under which the Genie app is run\nenv::String: the environment in which the Genie app will run\nhost::String: the local IP of the Genie app inside the container\nport::Int: the port of the Genie app inside the container\ndockerport::Int: the port to use on the host (used by the EXPOSE directive)\nforce::Bool: if the file already exists, when force is true, it will be overwritten\n\n\n\n\n\n","category":"function"},{"location":"deploy_docker.html#Genie.Deploy.Docker.build","page":"Deploy Docker","title":"Genie.Deploy.Docker.build","text":"build(path::String = \".\"; appname = \"genie\")\n\nBuilds the Docker image based on the Dockerfile\n\n\n\n\n\n","category":"function"},{"location":"deploy_docker.html#Genie.Deploy.Docker.run","page":"Deploy Docker","title":"Genie.Deploy.Docker.run","text":"run(; containername::String = \"genieapp\", hostport::Int = 80, containerport::Int = 8000, appdir::String = \"/home/genie/app\",\n    mountapp::Bool = false, image::String = \"genie\", command::String = \"bin/server\", rm::Bool = true, it::Bool = true)\n\nRuns the Docker container named containername, binding hostport and containerport.\n\nArguments\n\ncontainername::String: the name of the container of the Genie app\nhostport::Int: port to be used on the host for accessing the app\ncontainerport::Int: the port on which the app is running inside the container\nappdir::String: the folder where the app is stored within the container\nmountapp::String: if true the app from the host will be mounted so that changes on the host will be reflected when accessing the app in the container (to be used for dev)\nimage::String: the name of the Docker image\ncommand::String: what command to run when starting the app\nrm::Bool: removes the container upon exit\nit::Bool: runs interactively\n\n\n\n\n\n","category":"function"},{"location":"cache.html#","page":"Cache","title":"Cache","text":"CurrentModule = Cache","category":"page"},{"location":"cache.html#","page":"Cache","title":"Cache","text":"","category":"page"},{"location":"cache.html#","page":"Cache","title":"Cache","text":"withcache\r\npurge\r\npurgeall\r\ncachekey","category":"page"},{"location":"cache.html#Genie.Cache.withcache","page":"Cache","title":"Genie.Cache.withcache","text":"withcache(f::Function, key::Union{String,Symbol}, expiration::Int = Genie.config.cache_duration; dir = \"\", condition::Bool = true)\n\nExecutes the function f and stores the result into the cache for the duration (in seconds) of expiration. Next time the function is invoked, if the cache has not expired, the cached result is returned skipping the function execution. The optional dir param is used to designate the folder where the cache will be stored (within the configured cache folder). If condition is false caching will be skipped.\n\n\n\n\n\n","category":"function"},{"location":"cache.html#Genie.Cache.purge","page":"Cache","title":"Genie.Cache.purge","text":"purge()\n\nRemoves the cache data stored under the key key.\n\n\n\n\n\n","category":"function"},{"location":"cache.html#Genie.Cache.purgeall","page":"Cache","title":"Genie.Cache.purgeall","text":"purgeall()\n\nRemoves all cached data.\n\n\n\n\n\n","category":"function"},{"location":"cache.html#Genie.Cache.cachekey","page":"Cache","title":"Genie.Cache.cachekey","text":"cachekey(args...) :: String\n\nComputes a unique cache key based on args. Used to generate unique keys for storing data in cache.\n\n\n\n\n\n","category":"function"},{"location":"app.html#","page":"App","title":"App","text":"CurrentModule = App","category":"page"},{"location":"app.html#","page":"App","title":"App","text":"","category":"page"},{"location":"app.html#","page":"App","title":"App","text":"bootstrap","category":"page"},{"location":"app.html#Genie.App.bootstrap","page":"App","title":"Genie.App.bootstrap","text":"bootstrap(context::Union{Module,Nothing} = nothing) :: Nothing\n\nKickstarts the loading of a Genie app by loading the environment settings.\n\n\n\n\n\n","category":"function"},{"location":"input.html#","page":"Input","title":"Input","text":"CurrentModule = Genie","category":"page"},{"location":"input.html#","page":"Input","title":"Input","text":"","category":"page"},{"location":"input.html#","page":"Input","title":"Input","text":"","category":"page"},{"location":"generator.html#","page":"Generator","title":"Generator","text":"CurrentModule = Generator","category":"page"},{"location":"generator.html#","page":"Generator","title":"Generator","text":"","category":"page"},{"location":"generator.html#","page":"Generator","title":"Generator","text":"newapp\r\nnewapp_webservice\r\nnewapp_mvc\r\nnewapp_fullstack\r\nnewcontroller\r\nnewresource\r\nsetup_resource_path\r\nwrite_resource_file\r\nsetup_windows_bin_files\r\nsetup_nix_bin_files\r\nresource_does_not_exist\r\ncontroller_file_name\r\nsecret_token\r\nwrite_secrets_file\r\nfullstack_app\r\nmicrostack_app\r\nmvc_support\r\ndb_support\r\nwrite_app_custom_files\r\ninstall_app_dependencies\r\nautostart_app\r\nremove_fingerprint_initializer\r\nremove_searchlight_initializer","category":"page"},{"location":"generator.html#Genie.Generator.newapp","page":"Generator","title":"Genie.Generator.newapp","text":"newapp(path::String = \".\"; autostart::Bool = true, fullstack::Bool = false, dbsupport::Bool = false, mvcsupport::Bool = false) :: Nothing\n\nScaffolds a new Genie app, setting up the file structure indicated by the various arguments.\n\nArguments\n\npath::String: the name of the app and the path where to bootstrap it. Spaces not allowed\nautostart::Bool: automatically start the app once the file structure is created\nfullstack::Bool: the type of app to be bootstrapped. The fullstack app includes MVC structure, DB connection code, and asset pipeline files.\ndbsupport::Bool: bootstrap the files needed for DB connection setup via the SearchLight ORM\nmvcsupport::Bool: adds the files used for HTML+Julia view templates rendering and working with resources\n\nExamples\n\njulia> Genie.newapp(\"MyGenieApp\")\n2019-08-06 16:54:15:INFO:Main: Done! New app created at MyGenieApp\n2019-08-06 16:54:15:DEBUG:Main: Changing active directory to MyGenieApp\n2019-08-06 16:54:15:DEBUG:Main: Installing app dependencies\n Resolving package versions...\n  Updating `~/Dropbox/Projects/GenieTests/MyGenieApp/Project.toml`\n  [c43c736e] + Genie v0.10.1\n  Updating `~/Dropbox/Projects/GenieTests/MyGenieApp/Manifest.toml`\n\n2019-08-06 16:54:27:INFO:Main: Starting your brand new Genie app - hang tight!\n _____         _\n|   __|___ ___|_|___\n|  |  | -_|   | | -_|\n|_____|___|_|_|_|___|\n\n┌ Info:\n│ Starting Genie in >> DEV << mode\n└\n[ Info: Logging to file at MyGenieApp/log/dev.log\n[ Info: Ready!\n2019-08-06 16:54:32:DEBUG:Main: Web Server starting at http://127.0.0.1:8000\n2019-08-06 16:54:32:DEBUG:Main: Web Server running at http://127.0.0.1:8000\n\n\n\n\n\n","category":"function"},{"location":"generator.html#Genie.Generator.newapp_webservice","page":"Generator","title":"Genie.Generator.newapp_webservice","text":"newapp_webservice(path::String = \".\"; autostart::Bool = true, dbsupport::Bool = false) :: Nothing\n\nTemplate for scaffolding a new Genie app suitable for nimble web services.\n\nArguments\n\npath::String: the name of the app and the path where to bootstrap it\nautostart::Bool: automatically start the app once the file structure is created\ndbsupport::Bool: bootstrap the files needed for DB connection setup via the SearchLight ORM\n\n\n\n\n\n","category":"function"},{"location":"generator.html#Genie.Generator.newapp_mvc","page":"Generator","title":"Genie.Generator.newapp_mvc","text":"newapp_mvc(path::String = \".\"; autostart::Bool = true) :: Nothing\n\nTemplate for scaffolding a new Genie app suitable for MVC web applications (includes MVC structure and DB support).\n\nArguments\n\npath::String: the name of the app and the path where to bootstrap it\nautostart::Bool: automatically start the app once the file structure is created\n\n\n\n\n\n","category":"function"},{"location":"generator.html#Genie.Generator.newapp_fullstack","page":"Generator","title":"Genie.Generator.newapp_fullstack","text":"newapp_fullstack(path::String = \".\"; autostart::Bool = true) :: Nothing\n\nTemplate for scaffolding a new Genie app suitable for full stack web applications (includes MVC structure, DB support, and frontend asset pipeline).\n\nArguments\n\npath::String: the name of the app and the path where to bootstrap it\nautostart::Bool: automatically start the app once the file structure is created\n\n\n\n\n\n","category":"function"},{"location":"generator.html#Genie.Generator.newcontroller","page":"Generator","title":"Genie.Generator.newcontroller","text":"newcontroller(resource_name::String) :: Nothing\n\nGenerates a new Genie controller file and persists it to the resources folder.\n\n\n\n\n\n","category":"function"},{"location":"generator.html#Genie.Generator.newresource","page":"Generator","title":"Genie.Generator.newresource","text":"newresource(resource_name::String, config::Settings) :: Nothing\n\nGenerates all the files associated with a new resource and persists them to the resources folder.\n\n\n\n\n\n","category":"function"},{"location":"generator.html#Genie.Generator.setup_resource_path","page":"Generator","title":"Genie.Generator.setup_resource_path","text":"setup_resource_path(resource_name::String) :: String\n\nComputes and creates the directories structure needed to persist a new resource.\n\n\n\n\n\n","category":"function"},{"location":"generator.html#Genie.Generator.write_resource_file","page":"Generator","title":"Genie.Generator.write_resource_file","text":"write_resource_file(resource_path::String, file_name::String, resource_name::String) :: Bool\n\nGenerates all resouce files and persists them to disk.\n\n\n\n\n\n","category":"function"},{"location":"generator.html#Genie.Generator.setup_windows_bin_files","page":"Generator","title":"Genie.Generator.setup_windows_bin_files","text":"setup_windows_bin_files(path::String = \".\") :: Nothing\n\nCreates the bin/server and bin/repl binaries for Windows\n\n\n\n\n\n","category":"function"},{"location":"generator.html#Genie.Generator.setup_nix_bin_files","page":"Generator","title":"Genie.Generator.setup_nix_bin_files","text":"setup_nix_bin_files(app_path::String = \".\") :: Nothing\n\nCreates the bin/server and bin/repl binaries for *nix systems\n\n\n\n\n\n","category":"function"},{"location":"generator.html#Genie.Generator.resource_does_not_exist","page":"Generator","title":"Genie.Generator.resource_does_not_exist","text":"resource_does_not_exist(resource_path::String, file_name::String) :: Bool\n\nReturns true if the indicated resources does not exists - false otherwise.\n\n\n\n\n\n","category":"function"},{"location":"generator.html#Genie.Generator.controller_file_name","page":"Generator","title":"Genie.Generator.controller_file_name","text":"controller_file_name(resource_name::Union{String,Symbol})\n\nComputes the controller file name based on the resource name.\n\n\n\n\n\n","category":"function"},{"location":"generator.html#Genie.Generator.secret_token","page":"Generator","title":"Genie.Generator.secret_token","text":"secret_token() :: String\n\nGenerates a random secret token to be used for configuring the SECRET_TOKEN const.\n\n\n\n\n\n","category":"function"},{"location":"generator.html#Genie.Generator.write_secrets_file","page":"Generator","title":"Genie.Generator.write_secrets_file","text":"Generates a valid secrets.jl file with a random SECRET_TOKEN.\n\n\n\n\n\n","category":"function"},{"location":"generator.html#Genie.Generator.fullstack_app","page":"Generator","title":"Genie.Generator.fullstack_app","text":"fullstack_app(app_path::String = \".\") :: Nothing\n\nWrites the files necessary to create a full stack Genie app.\n\n\n\n\n\n","category":"function"},{"location":"generator.html#Genie.Generator.microstack_app","page":"Generator","title":"Genie.Generator.microstack_app","text":"microstack_app(app_path::String = \".\") :: Nothing\n\nWrites the file necessary to create a microstack app.\n\n\n\n\n\n","category":"function"},{"location":"generator.html#Genie.Generator.mvc_support","page":"Generator","title":"Genie.Generator.mvc_support","text":"mvc_support(app_path::String = \".\") :: Nothing\n\nWrites the files used for rendering resources using the MVC stack and the Genie templating system.\n\n\n\n\n\n","category":"function"},{"location":"generator.html#Genie.Generator.db_support","page":"Generator","title":"Genie.Generator.db_support","text":"db_support(app_path::String = \".\") :: Nothing\n\nWrites files used for interacting with the SearchLight ORM.\n\n\n\n\n\n","category":"function"},{"location":"generator.html#Genie.Generator.write_app_custom_files","page":"Generator","title":"Genie.Generator.write_app_custom_files","text":"write_app_custom_files(path::String, app_path::String) :: Nothing\n\nWrites the Genie app main module file.\n\n\n\n\n\n","category":"function"},{"location":"generator.html#Genie.Generator.install_app_dependencies","page":"Generator","title":"Genie.Generator.install_app_dependencies","text":"install_app_dependencies(app_path::String = \".\") :: Nothing\n\nInstalls the application's dependencies using Julia's Pkg\n\n\n\n\n\n","category":"function"},{"location":"generator.html#Genie.Generator.autostart_app","page":"Generator","title":"Genie.Generator.autostart_app","text":"autostart_app(path::String = \".\"; autostart::Bool = true) :: Nothing\n\nIf autostart is true, the newly generated Genie app will be automatically started.\n\n\n\n\n\n","category":"function"},{"location":"generator.html#Genie.Generator.remove_fingerprint_initializer","page":"Generator","title":"Genie.Generator.remove_fingerprint_initializer","text":"remove_fingerprint_initializer(app_path::String = \".\") :: Nothing\n\nRemoves the asset fingerprint initializers if it's not used\n\n\n\n\n\n","category":"function"},{"location":"generator.html#Genie.Generator.remove_searchlight_initializer","page":"Generator","title":"Genie.Generator.remove_searchlight_initializer","text":"remove_searchlight_initializer(app_path::String = \".\") :: Nothing\n\nRemoves the SearchLight initializer file if it's unused\n\n\n\n\n\n","category":"function"},{"location":"headers.html#","page":"Headers","title":"Headers","text":"CurrentModule = Headers","category":"page"},{"location":"headers.html#","page":"Headers","title":"Headers","text":"","category":"page"},{"location":"headers.html#","page":"Headers","title":"Headers","text":"set_headers!\r\nnormalize_headers\r\nnormalize_header_key","category":"page"},{"location":"inflector.html#","page":"Inflector","title":"Inflector","text":"CurrentModule = Genie","category":"page"},{"location":"inflector.html#","page":"Inflector","title":"Inflector","text":"","category":"page"},{"location":"inflector.html#","page":"Inflector","title":"Inflector","text":"to_singular\r\nto_singular_irregular\r\nto_plural\r\nto_plural_irregular\r\nfrom_underscores\r\nis_singular\r\nis_plural\r\nirregulars\r\nirregular\r\nis_irregular\r\nIRREGULAR_NOUNS","category":"page"},{"location":"renderer_json.html#","page":"-","title":"-","text":"CurrentModule = Renderer.Json","category":"page"},{"location":"renderer_json.html#","page":"-","title":"-","text":"","category":"page"},{"location":"renderer_json.html#","page":"-","title":"-","text":"","category":"page"},{"location":"renderer_html.html#","page":"-","title":"-","text":"CurrentModule = Renderer.Html","category":"page"},{"location":"renderer_html.html#","page":"-","title":"-","text":"","category":"page"},{"location":"renderer_html.html#","page":"-","title":"-","text":"normal_element\r\nprepare_template\r\nattributes\r\nparseattr\r\nnormalize_element\r\ndenormalize_element\r\nvoid_element\r\nskip_element\r\ninclude_markdown\r\nget_template\r\ndoctype\r\ndoc\r\nparseview\r\nrender\r\nGenie.Renderer.render\r\nhtml\r\nparsehtml\r\nstring_to_julia\r\nto_julia\r\npartial\r\ntemplate\r\nread_template_file\r\nparse_template\r\nparse_string\r\nparse\r\nparsetags\r\nregister_elements\r\nregister_element\r\nregister_normal_element\r\nregister_void_element\r\nattr\r\n@foreach\r\ncollection\r\nGenie.Router.error\r\nserve_error_file\r\n@yield\r\nel","category":"page"},{"location":"renderer_html.html#Genie.Renderer.Html.normal_element","page":"-","title":"Genie.Renderer.Html.normal_element","text":"normal_element(f::Function, elem::String, attrs::Vector{Pair{Symbol,Any}} = Pair{Symbol,Any}[]) :: HTMLString\n\nGenerates a HTML element in the form <...></...>\n\n\n\n\n\n","category":"function"},{"location":"renderer_html.html#Genie.Renderer.Html.prepare_template","page":"-","title":"Genie.Renderer.Html.prepare_template","text":"prepare_template(s::String)\nprepare_template{T}(v::Vector{T})\n\nCleans up the template before rendering (ex by removing empty nodes).\n\n\n\n\n\n","category":"function"},{"location":"renderer_html.html#Genie.Renderer.Html.attributes","page":"-","title":"Genie.Renderer.Html.attributes","text":"attributes(attrs::Vector{Pair{Symbol,String}} = Vector{Pair{Symbol,String}}()) :: Vector{String}\n\nParses HTML attributes.\n\n\n\n\n\n","category":"function"},{"location":"renderer_html.html#Genie.Renderer.Html.normalize_element","page":"-","title":"Genie.Renderer.Html.normalize_element","text":"normalize_element(elem::String)\n\nCleans up problematic characters or DOM elements.\n\n\n\n\n\n","category":"function"},{"location":"renderer_html.html#Genie.Renderer.Html.void_element","page":"-","title":"Genie.Renderer.Html.void_element","text":"void_element(elem::String, attrs::Vector{Pair{Symbol,String}} = Vector{Pair{Symbol,String}}()) :: HTMLString\n\nGenerates a void HTML element in the form <...>\n\n\n\n\n\n","category":"function"},{"location":"renderer_html.html#Genie.Renderer.Html.skip_element","page":"-","title":"Genie.Renderer.Html.skip_element","text":"skip_element(f::Function) :: HTMLString\nskip_element() :: HTMLString\n\nCleans up empty elements.\n\n\n\n\n\n","category":"function"},{"location":"renderer_html.html#Genie.Renderer.Html.include_markdown","page":"-","title":"Genie.Renderer.Html.include_markdown","text":"include_markdown(path::String; context::Module = @__MODULE__)\n\nIncludes and renders a markdown view file\n\n\n\n\n\n","category":"function"},{"location":"renderer_html.html#Genie.Renderer.Html.get_template","page":"-","title":"Genie.Renderer.Html.get_template","text":"get_template(path::String; partial::Bool = true, context::Module = @__MODULE__) :: Function\n\nResolves the inclusion and rendering of a template file\n\n\n\n\n\n","category":"function"},{"location":"renderer_html.html#Genie.Renderer.Html.doctype","page":"-","title":"Genie.Renderer.Html.doctype","text":"Outputs document's doctype.\n\n\n\n\n\n","category":"function"},{"location":"renderer_html.html#Genie.Renderer.Html.doc","page":"-","title":"Genie.Renderer.Html.doc","text":"Outputs document's doctype.\n\n\n\n\n\n","category":"function"},{"location":"renderer_html.html#Genie.Renderer.Html.parseview","page":"-","title":"Genie.Renderer.Html.parseview","text":"parseview(data::String; partial = false, context::Module = @__MODULE__) :: Function\n\nParses a view file, returning a rendering function. If necessary, the function is JIT-compiled, persisted and loaded into memory.\n\n\n\n\n\n","category":"function"},{"location":"renderer_html.html#Genie.Renderer.Html.render","page":"-","title":"Genie.Renderer.Html.render","text":"\n\n\n\n\n\n\n\n","category":"function"},{"location":"renderer_html.html#Genie.Renderer.Html.html","page":"-","title":"Genie.Renderer.Html.html","text":"html(data::String; context::Module = @__MODULE__, status::Int = 200, headers::HTTPHeaders = HTTPHeaders(), layout::Union{String,Nothing} = nothing, vars...) :: HTTP.Response\n\nParses the data input as HTML, returning a HTML HTTP Response.\n\nArguments\n\ndata::String: the HTML string to be rendered\ncontext::Module: the module in which the variables are evaluated (in order to provide the scope for vars). Usually the controller.\nstatus::Int: status code of the response\nheaders::HTTPHeaders: HTTP response headers\nlayout::Union{String,Nothing}: layout file for rendering data\n\nExample\n\njulia> html(\"<h1>Welcome $(@vars(:name))</h1>\", layout = \"<div><% @yield %></div>\", name = \"Adrian\")\nHTTP.Messages.Response:\n\"\nHTTP/1.1 200 OK\nContent-Type: text/html; charset=utf-8\n\n<html><head></head><body><div><h1>Welcome Adrian</h1>\n</div></body></html>\"\n\n\n\n\n\nhtml(viewfile::FilePath; layout::Union{Nothing,FilePath} = nothing,\n      context::Module = @__MODULE__, status::Int = 200, headers::HTTPHeaders = HTTPHeaders(), vars...) :: HTTP.Response\n\nParses and renders the HTML viewfile, optionally rendering it within the layout file. Valid file format is .html.jl.\n\nArguments\n\nviewfile::FilePath: filesystem path to the view file as a Renderer.FilePath, ie Renderer.FilePath(\"/path/to/file.html.jl\")\nlayout::FilePath: filesystem path to the layout file as a Renderer.FilePath, ie Renderer.FilePath(\"/path/to/file.html.jl\")\ncontext::Module: the module in which the variables are evaluated (in order to provide the scope for vars). Usually the controller.\nstatus::Int: status code of the response\nheaders::HTTPHeaders: HTTP response headers\n\n\n\n\n\n","category":"function"},{"location":"renderer_html.html#Genie.Renderer.Html.parsehtml","page":"-","title":"Genie.Renderer.Html.parsehtml","text":"parsehtml(elem, output, depth; partial = true) :: String\n\nParses a HTML tree structure into a string of Julia code.\n\n\n\n\n\n","category":"function"},{"location":"renderer_html.html#Genie.Renderer.Html.string_to_julia","page":"-","title":"Genie.Renderer.Html.string_to_julia","text":"string_to_julia(content::String; partial = true, f_name::Union{Symbol,Nothing} = nothing, prepend = \"\") :: String\n\nConverts string view data to Julia code\n\n\n\n\n\n","category":"function"},{"location":"renderer_html.html#Genie.Renderer.Html.to_julia","page":"-","title":"Genie.Renderer.Html.to_julia","text":"to_julia(input::String, f::Function; partial = true, f_name::Union{Symbol,Nothing} = nothing, prepend = \"\") :: String\n\nConverts an input file to Julia code\n\n\n\n\n\n","category":"function"},{"location":"renderer_html.html#Genie.Renderer.Html.partial","page":"-","title":"Genie.Renderer.Html.partial","text":"partial(path::String; context::Module = @__MODULE__, vars...) :: String\n\nRenders (includes) a view partial within a larger view or layout file.\n\n\n\n\n\n","category":"function"},{"location":"renderer_html.html#Genie.Renderer.Html.template","page":"-","title":"Genie.Renderer.Html.template","text":"template(path::String; partial::Bool = true, context::Module = @__MODULE__) :: String\n\nRenders a template file.\n\n\n\n\n\n","category":"function"},{"location":"renderer_html.html#Genie.Renderer.Html.read_template_file","page":"-","title":"Genie.Renderer.Html.read_template_file","text":"read_template_file(file_path::String) :: String\n\nReads file_path template from disk.\n\n\n\n\n\n","category":"function"},{"location":"renderer_html.html#Genie.Renderer.Html.parse_template","page":"-","title":"Genie.Renderer.Html.parse_template","text":"parse_template(file_path::String; partial = true) :: String\n\nParses a HTML file into Julia code.\n\n\n\n\n\n","category":"function"},{"location":"renderer_html.html#Genie.Renderer.Html.parse_string","page":"-","title":"Genie.Renderer.Html.parse_string","text":"parse_string(data::String; partial = true) :: String\n\nParses a HTML string into Julia code.\n\n\n\n\n\n","category":"function"},{"location":"renderer_html.html#Genie.Renderer.Html.parsetags","page":"-","title":"Genie.Renderer.Html.parsetags","text":"parsetags(line::Tuple{Int,String}, strip_close_tag = false) :: String\n\nParses special HTML+Julia tags.\n\n\n\n\n\n","category":"function"},{"location":"renderer_html.html#Genie.Renderer.Html.register_elements","page":"-","title":"Genie.Renderer.Html.register_elements","text":"register_elements() :: Nothing\n\nGenerated functions that represent Julia functions definitions corresponding to HTML elements.\n\n\n\n\n\n","category":"function"},{"location":"renderer_html.html#Genie.Renderer.Html.@foreach","page":"-","title":"Genie.Renderer.Html.@foreach","text":"@foreach(f, arr)\n\nIterates over the arr Array and applies function f for each element. The results of each iteration are concatenated and the final string is returned.\n\nExamples\n\n@foreach(@vars(:translations)) do t   t end\n\n\n\n\n\n","category":"macro"},{"location":"renderer_html.html#Genie.Renderer.Html.serve_error_file","page":"-","title":"Genie.Renderer.Html.serve_error_file","text":"serve_error_file(error_code::Int, error_message::String = \"\", params::Dict{Symbol,Any} = Dict{Symbol,Any}()) :: Response\n\nServes the error file correspoding to error_code and current environment.\n\n\n\n\n\n","category":"function"},{"location":"renderer_html.html#Genie.Renderer.Html.@yield","page":"-","title":"Genie.Renderer.Html.@yield","text":"@yield\n\nOutputs the rendering of the view within the template.\n\n\n\n\n\n","category":"macro"},{"location":"webchannels.html#","page":"WebChannels","title":"WebChannels","text":"CurrentModule = WebChannels","category":"page"},{"location":"webchannels.html#","page":"WebChannels","title":"WebChannels","text":"","category":"page"},{"location":"webchannels.html#","page":"WebChannels","title":"WebChannels","text":"ChannelClient\r\nChannelMessage\r\nclients\r\nsubscriptions\r\nwebsockets\r\nchannels\r\nconnected_clients\r\ndisconnected_clients\r\nsubscribe\r\nunsubscribe\r\nunsubscribe_client\r\nunsubscribe_disconnected_clients\r\npush_subscription\r\npop_subscription\r\nbroadcast\r\nmessage","category":"page"},{"location":"webchannels.html#Genie.WebChannels.connected_clients","page":"WebChannels","title":"Genie.WebChannels.connected_clients","text":"\n\n\n\n","category":"function"},{"location":"webchannels.html#Genie.WebChannels.disconnected_clients","page":"WebChannels","title":"Genie.WebChannels.disconnected_clients","text":"\n\n\n\n","category":"function"},{"location":"webchannels.html#Genie.WebChannels.subscribe","page":"WebChannels","title":"Genie.WebChannels.subscribe","text":"Subscribes a web socket client ws to channel.\n\n\n\n\n\n","category":"function"},{"location":"webchannels.html#Genie.WebChannels.unsubscribe","page":"WebChannels","title":"Genie.WebChannels.unsubscribe","text":"Unsubscribes a web socket client ws from channel.\n\n\n\n\n\n","category":"function"},{"location":"webchannels.html#Genie.WebChannels.unsubscribe_client","page":"WebChannels","title":"Genie.WebChannels.unsubscribe_client","text":"Unsubscribes a web socket client ws from all the channels.\n\n\n\n\n\n","category":"function"},{"location":"webchannels.html#Genie.WebChannels.push_subscription","page":"WebChannels","title":"Genie.WebChannels.push_subscription","text":"Adds a new subscription for client to channel.\n\n\n\n\n\n","category":"function"},{"location":"webchannels.html#Genie.WebChannels.pop_subscription","page":"WebChannels","title":"Genie.WebChannels.pop_subscription","text":"Removes the subscription of client to channel.\n\n\n\n\n\nRemoves all subscriptions of client.\n\n\n\n\n\n","category":"function"},{"location":"webchannels.html#Genie.WebChannels.broadcast","page":"WebChannels","title":"Genie.WebChannels.broadcast","text":"Pushes msg (and payload) to all the clients subscribed to the channels in channels.\n\n\n\n\n\nPushes msg (and payload) to all the clients subscribed to all the channels.\n\n\n\n\n\n","category":"function"},{"location":"webchannels.html#Genie.WebChannels.message","page":"WebChannels","title":"Genie.WebChannels.message","text":"Pushes msg (and payload) to channel.\n\n\n\n\n\nWrites msg to web socket for client.\n\n\n\n\n\n","category":"function"},{"location":"genie.html#","page":"Genie","title":"Genie","text":"CurrentModule = Genie","category":"page"},{"location":"genie.html#","page":"Genie","title":"Genie","text":"","category":"page"},{"location":"genie.html#","page":"Genie","title":"Genie","text":"serve\r\nnewapp\r\nnewapp_webservice\r\nnewapp_mvc\r\nnewapp_fullstack\r\nloadapp\r\nstartup\r\nup\r\ndown\r\nrun\r\nnewcontroller\r\nnewresource\r\nnewtask\r\nload_libs\r\nload_resources\r\nload_helpers\r\nload_configurations\r\nload_initializers\r\nload_plugins\r\nload_routes_definitions\r\nsecret_token\r\ndefault_context\r\nload\r\nreplprint","category":"page"},{"location":"genie.html#Genie.serve","page":"Genie","title":"Genie.serve","text":"serve(path::String = Genie.config.server_document_root, params...; kwparams...)\n\nServes a folder of static files located at path. Allows Genie to be used as a static files web server. The params and kwparams arguments are forwarded to Genie.startup().\n\nArguments\n\npath::String: the folder of static files to be served by the server\nparams: additional arguments which are passed to Genie.startup to control the web server\nkwparams: additionak keyword arguments which are passed to Genie.startup to control the web server\n\nExamples\n\njulia> Genie.serve(\"public\", 8888, async = false, verbose = true)\n[ Info: Ready!\n2019-08-06 16:39:20:DEBUG:Main: Web Server starting at http://127.0.0.1:8888\n[ Info: Listening on: 127.0.0.1:8888\n[ Info: Accept (1):  🔗    0↑     0↓    1s 127.0.0.1:8888:8888 ≣16\n\n\n\n\n\n","category":"function"},{"location":"genie.html#Genie.newapp","page":"Genie","title":"Genie.newapp","text":"newapp(path::String = \".\"; autostart::Bool = true, fullstack::Bool = false, dbsupport::Bool = false, mvcsupport::Bool = false) :: Nothing\n\nScaffolds a new Genie app, setting up the file structure indicated by the various arguments.\n\nArguments\n\npath::String: the name of the app and the path where to bootstrap it\nautostart::Bool: automatically start the app once the file structure is created\nfullstack::Bool: the type of app to be bootstrapped. The fullstack app includes MVC structure, DB connection code, and asset pipeline files.\ndbsupport::Bool: bootstrap the files needed for DB connection setup via the SearchLight ORM\nmvcsupport::Bool: adds the files used for HTML+Julia view templates rendering and working with resources\n\nExamples\n\njulia> Genie.newapp(\"MyGenieApp\")\n2019-08-06 16:54:15:INFO:Main: Done! New app created at MyGenieApp\n2019-08-06 16:54:15:DEBUG:Main: Changing active directory to MyGenieApp\n2019-08-06 16:54:15:DEBUG:Main: Installing app dependencies\n Resolving package versions...\n  Updating `~/Dropbox/Projects/GenieTests/MyGenieApp/Project.toml`\n  [c43c736e] + Genie v0.10.1\n  Updating `~/Dropbox/Projects/GenieTests/MyGenieApp/Manifest.toml`\n\n2019-08-06 16:54:27:INFO:Main: Starting your brand new Genie app - hang tight!\n _____         _\n|   __|___ ___|_|___\n|  |  | -_|   | | -_|\n|_____|___|_|_|_|___|\n\n┌ Info:\n│ Starting Genie in >> DEV << mode\n└\n[ Info: Logging to file at MyGenieApp/log/dev.log\n[ Info: Ready!\n2019-08-06 16:54:32:DEBUG:Main: Web Server starting at http://127.0.0.1:8000\n2019-08-06 16:54:32:DEBUG:Main: Web Server running at http://127.0.0.1:8000\n\n\n\n\n\n","category":"function"},{"location":"genie.html#Genie.newapp_webservice","page":"Genie","title":"Genie.newapp_webservice","text":"newapp_webservice(path::String = \".\"; autostart::Bool = true, dbsupport::Bool = false) :: Nothing\n\nTemplate for scaffolding a new Genie app suitable for nimble web services.\n\nArguments\n\npath::String: the name of the app and the path where to bootstrap it\nautostart::Bool: automatically start the app once the file structure is created\ndbsupport::Bool: bootstrap the files needed for DB connection setup via the SearchLight ORM\n\n\n\n\n\n","category":"function"},{"location":"genie.html#Genie.newapp_mvc","page":"Genie","title":"Genie.newapp_mvc","text":"newapp_mvc(path::String = \".\"; autostart::Bool = true) :: Nothing\n\nTemplate for scaffolding a new Genie app suitable for MVC web applications (includes MVC structure and DB support).\n\nArguments\n\npath::String: the name of the app and the path where to bootstrap it\nautostart::Bool: automatically start the app once the file structure is created\n\n\n\n\n\n","category":"function"},{"location":"genie.html#Genie.newapp_fullstack","page":"Genie","title":"Genie.newapp_fullstack","text":"newapp_fullstack(path::String = \".\"; autostart::Bool = true) :: Nothing\n\nTemplate for scaffolding a new Genie app suitable for full stack web applications (includes MVC structure, DB support, and frontend asset pipeline).\n\nArguments\n\npath::String: the name of the app and the path where to bootstrap it\nautostart::Bool: automatically start the app once the file structure is created\n\n\n\n\n\n","category":"function"},{"location":"genie.html#Genie.loadapp","page":"Genie","title":"Genie.loadapp","text":"loadapp(path::String = \".\"; autostart::Bool = false) :: Nothing\n\nLoads an existing Genie app from the file system, within the current Julia REPL session.\n\nArguments\n\npath::String: the path to the Genie app on the file system.\nautostart::Bool: automatically start the app upon loading it.\n\nExamples\n\nshell> tree -L 1\n.\n├── Manifest.toml\n├── Project.toml\n├── bin\n├── bootstrap.jl\n├── config\n├── env.jl\n├── genie.jl\n├── log\n├── public\n├── routes.jl\n└── src\n\n5 directories, 6 files\n\njulia> using Genie\n\njulia> Genie.loadapp(\".\")\n _____         _\n|   __|___ ___|_|___\n|  |  | -_|   | | -_|\n|_____|___|_|_|_|___|\n\n┌ Info:\n│ Starting Genie in >> DEV << mode\n└\n[ Info: Logging to file at MyGenieApp/log/dev.log\n\n\n\n\n\n","category":"function"},{"location":"genie.html#Genie.startup","page":"Genie","title":"Genie.startup","text":"startup(port::Int = Genie.config.server_port, host::String = Genie.config.server_host;\n    ws_port::Int = Genie.config.websockets_port, async::Bool = ! Genie.config.run_as_server) :: Nothing\n\nStarts the web server. Alias for AppServer.startup\n\nArguments\n\nport::Int: the port used by the web server\nhost::String: the host used by the web server\nws_port::Int: the port used by the Web Sockets server\nasync::Bool: run the web server task asynchronously\n\nExamples\n\njulia> startup(8000, \"127.0.0.1\", async = false)\n[ Info: Ready!\nWeb Server starting at http://127.0.0.1:8000\n\n\n\n\n\n","category":"function"},{"location":"genie.html#Genie.up","page":"Genie","title":"Genie.up","text":"startup(port::Int = Genie.config.server_port, host::String = Genie.config.server_host;\n    ws_port::Int = Genie.config.websockets_port, async::Bool = ! Genie.config.run_as_server) :: ServersCollection\n\nStarts the web server.\n\nArguments\n\nport::Int: the port used by the web server\nhost::String: the host used by the web server\nws_port::Int: the port used by the Web Sockets server\nasync::Bool: run the web server task asynchronously\n\nExamples\n\njulia> up(8000, \"127.0.0.1\", async = false)\n[ Info: Ready!\nWeb Server starting at http://127.0.0.1:8000\n\n\n\n\n\n","category":"function"},{"location":"genie.html#Genie.down","page":"Genie","title":"Genie.down","text":"downdown(; webserver::Bool = true, websockets::Bool = true) :: ServersCollection\n\nShuts down the servers optionally indicating which of the webserver and websockets servers to be stopped.\n\n\n\n\n\n","category":"function"},{"location":"genie.html#Genie.run","page":"Genie","title":"Genie.run","text":"run() :: Nothing\n\nRuns the Genie app by parsing the command line args and invoking the corresponding actions. Used internally to parse command line arguments.\n\n\n\n\n\n","category":"function"},{"location":"genie.html#Genie.newcontroller","page":"Genie","title":"Genie.newcontroller","text":"newcontroller(controller_name::Union{String,Symbol}) :: Nothing\n\nCreates a new controller file. If pluralize is false, the name of the controller is not automatically pluralized.\n\n\n\n\n\n","category":"function"},{"location":"genie.html#Genie.newresource","page":"Genie","title":"Genie.newresource","text":"newresource(resource_name::Union{String,Symbol}; pluralize::Bool = true, context::Union{Module,Nothing} = nothing) :: Nothing\n\nCreates all the files associated with a new resource. If pluralize is false, the name of the resource is not automatically pluralized.\n\n\n\n\n\n","category":"function"},{"location":"genie.html#Genie.newtask","page":"Genie","title":"Genie.newtask","text":"newtask(task_name::Union{String,Symbol}) :: Nothing\n\nCreates a new Genie Task file.\n\n\n\n\n\n","category":"function"},{"location":"genie.html#Genie.load_libs","page":"Genie","title":"Genie.load_libs","text":"load_libs(root_dir::String = Genie.config.path_lib) :: Nothing\n\nRecursively adds subfolders of lib/ to LOAD_PATH. The lib/ folder, if present, is designed to host user code in the form of .jl files. This function loads user code into the Genie app.\n\n\n\n\n\n","category":"function"},{"location":"genie.html#Genie.load_resources","page":"Genie","title":"Genie.load_resources","text":"load_resources(root_dir::String = Genie.config.path_resources) :: Nothing\n\nRecursively adds subfolders of resources/ to LOAD_PATH.\n\n\n\n\n\n","category":"function"},{"location":"genie.html#Genie.load_helpers","page":"Genie","title":"Genie.load_helpers","text":"load_helpers(root_dir::String = Genie.config.path_helpers) :: Nothing\n\nRecursively adds subfolders of helpers/ to LOAD_PATH.\n\n\n\n\n\n","category":"function"},{"location":"genie.html#Genie.load_configurations","page":"Genie","title":"Genie.load_configurations","text":"load_configurations(root_dir::String = Genie.config.path_config; context::Union{Module,Nothing} = nothing) :: Nothing\n\nLoads (includes) the framework's configuration files into the app's module context. The files are set up with Revise to be automatically reloaded.\n\n\n\n\n\n","category":"function"},{"location":"genie.html#Genie.load_initializers","page":"Genie","title":"Genie.load_initializers","text":"load_initializers(root_dir::String = Genie.config.path_config; context::Union{Module,Nothing} = nothing) :: Nothing\n\nLoads (includes) the framework's initializers. The files are set up with Revise to be automatically reloaded.\n\n\n\n\n\n","category":"function"},{"location":"genie.html#Genie.load_plugins","page":"Genie","title":"Genie.load_plugins","text":"load_plugins(root_dir::String = Genie.config.path_plugins; context::Union{Module,Nothing} = nothing) :: Nothing\n\nLoads (includes) the framework's plugins initializers.\n\n\n\n\n\n","category":"function"},{"location":"genie.html#Genie.load_routes_definitions","page":"Genie","title":"Genie.load_routes_definitions","text":"load_routes_definitions(routes_file::String = Genie.ROUTES_FILE_NAME; context::Union{Module,Nothing} = nothing) :: Nothing\n\nLoads the routes file.\n\n\n\n\n\n","category":"function"},{"location":"genie.html#Genie.secret_token","page":"Genie","title":"Genie.secret_token","text":"secret_token(; context::Union{Module,Nothing} = nothing) :: String\n\nWrapper around /config/secrets.jl SECRET_TOKEN const. Sets up the secret token used in the app for encryption and salting. If there isn't a valid secrets file, a temporary secret token is generated for the current session only.\n\n\n\n\n\n","category":"function"},{"location":"genie.html#Genie.default_context","page":"Genie","title":"Genie.default_context","text":"default_context(context::Union{Module,Nothing})\n\nSets the module in which the code is loaded (the app's module)\n\n\n\n\n\n","category":"function"},{"location":"genie.html#Genie.load","page":"Genie","title":"Genie.load","text":"load(; context::Union{Module,Nothing} = nothing) :: Nothing\n\nMain entry point to loading a Genie app.\n\n\n\n\n\n","category":"function"},{"location":"genie.html#Genie.replprint","page":"Genie","title":"Genie.replprint","text":"replprint(output::String, terminal;\n                newline::Int = 0, clearline::Int = 1, color::Symbol = :white, bold::Bool = false, sleep_time::Float64 = 0.2,\n                prefix::String = \"\", prefix_color::Symbol = :green, prefix_bold::Bool = true)\n\nPrints app loading progress to the console.\n\n\n\n\n\n","category":"function"},{"location":"router.html#","page":"Router","title":"Router","text":"CurrentModule = Router","category":"page"},{"location":"router.html#","page":"Router","title":"Router","text":"","category":"page"},{"location":"router.html#","page":"Router","title":"Router","text":"show\r\nParams\r\nRoute\r\nChannel\r\nDict\r\nispayload\r\nroute\r\nchannel\r\nnamedroutes\r\nnamedchannels\r\nroutes\r\nchannels\r\ndelete!\r\nto_link!!\r\nlink_to!!\r\nto_link\r\nlink_to\r\ncontent_type\r\ncontent_length\r\nrequest_type_is\r\nrequest_type\r\n@params\r\n@request\r\nresponse_type\r\nis_static_file\r\nto_uri\r\nserve_static_file\r\npreflight_response\r\nerror_404\r\nerror_500\r\nfile_extension\r\nfile_headers","category":"page"},{"location":"router.html#Base.show","page":"Router","title":"Base.show","text":"show(x)\n\nWrite an informative text representation of a value to the current output stream. New types should overload show(io::IO, x) where the first argument is a stream. The representation used by show generally includes Julia-specific formatting and type information.\n\nrepr returns the output of show as a string.\n\nSee also print, which writes un-decorated representations.\n\nExamples\n\njulia> show(\"Hello World!\")\n\"Hello World!\"\njulia> print(\"Hello World!\")\nHello World!\n\n\n\n\n\nshow(io, mime, x)\n\nThe display functions ultimately call show in order to write an object x as a given mime type to a given I/O stream io (usually a memory buffer), if possible. In order to provide a rich multimedia representation of a user-defined type T, it is only necessary to define a new show method for T, via: show(io, ::MIME\"mime\", x::T) = ..., where mime is a MIME-type string and the function body calls write (or similar) to write that representation of x to io. (Note that the MIME\"\" notation only supports literal strings; to construct MIME types in a more flexible manner use MIME{Symbol(\"\")}.)\n\nFor example, if you define a MyImage type and know how to write it to a PNG file, you could define a function show(io, ::MIME\"image/png\", x::MyImage) = ... to allow your images to be displayed on any PNG-capable AbstractDisplay (such as IJulia). As usual, be sure to import Base.show in order to add new methods to the built-in Julia function show.\n\nThe default MIME type is MIME\"text/plain\". There is a fallback definition for text/plain output that calls show with 2 arguments. Therefore, this case should be handled by defining a 2-argument show(io::IO, x::MyType) method.\n\nTechnically, the MIME\"mime\" macro defines a singleton type for the given mime string, which allows us to exploit Julia's dispatch mechanisms in determining how to display objects of any given type.\n\nThe first argument to show can be an IOContext specifying output format properties. See IOContext for details.\n\n\n\n\n\nBase.show(io::IO, ex::RuntimeException)\n\nCustom printing of RuntimeException\n\n\n\n\n\nBase.show(io::IO, ex::FileExistsException)\n\nCustom printing for FileExistsException\n\n\n\n\n\n","category":"function"},{"location":"router.html#Genie.Router.Params","page":"Router","title":"Genie.Router.Params","text":"mutable struct Params{T}\n\nCollection of key value pairs representing the parameters of the current request - response cycle.\n\n\n\n\n\n","category":"type"},{"location":"router.html#Genie.Router.Route","page":"Router","title":"Genie.Router.Route","text":"mutable struct Route\n\nRepresentation of a route object\n\n\n\n\n\n","category":"type"},{"location":"router.html#Genie.Router.Channel","page":"Router","title":"Genie.Router.Channel","text":"mutable struct Channel\n\nRepresentation of a WebSocket Channel object\n\n\n\n\n\n","category":"type"},{"location":"router.html#Genie.Router.ispayload","page":"Router","title":"Genie.Router.ispayload","text":"ispayload(req::HTTP.Request)\n\nTrue if the request can carry a payload - that is, it's a POST, PUT, or PATCH request\n\n\n\n\n\n","category":"function"},{"location":"router.html#Genie.Router.route","page":"Router","title":"Genie.Router.route","text":"Named Genie routes constructors.\n\n\n\n\n\n","category":"function"},{"location":"router.html#Genie.Router.channel","page":"Router","title":"Genie.Router.channel","text":"Named Genie channels constructors.\n\n\n\n\n\n","category":"function"},{"location":"router.html#Genie.Router.namedroutes","page":"Router","title":"Genie.Router.namedroutes","text":"The list of the defined named routes.\n\n\n\n\n\n","category":"function"},{"location":"router.html#Genie.Router.namedchannels","page":"Router","title":"Genie.Router.namedchannels","text":"named_channels() :: Dict{Symbol,Any}\n\nThe list of the defined named channels.\n\n\n\n\n\n","category":"function"},{"location":"router.html#Genie.Router.routes","page":"Router","title":"Genie.Router.routes","text":"routes() :: Vector{Route}\n\nReturns a vector of defined routes.\n\n\n\n\n\n","category":"function"},{"location":"router.html#Genie.Router.channels","page":"Router","title":"Genie.Router.channels","text":"channels() :: Vector{Channel}\n\nReturns a vector of defined channels.\n\n\n\n\n\n","category":"function"},{"location":"router.html#Genie.Router.delete!","page":"Router","title":"Genie.Router.delete!","text":"delete!(routes, route_name::Symbol)\n\nRemoves the route with the corresponding name from the routes collection and returns the collection of remaining routes.\n\n\n\n\n\n","category":"function"},{"location":"router.html#Genie.Router.to_link","page":"Router","title":"Genie.Router.to_link","text":"Generates the HTTP link corresponding to route_name using the parameters in d.\n\n\n\n\n\nGenerates the HTTP link corresponding to route_name using the parameters in route_params.\n\n\n\n\n\n","category":"function"},{"location":"router.html#Genie.Router.link_to","page":"Router","title":"Genie.Router.link_to","text":"Generates the HTTP link corresponding to route_name using the parameters in d.\n\n\n\n\n\nGenerates the HTTP link corresponding to route_name using the parameters in route_params.\n\n\n\n\n\n","category":"function"},{"location":"router.html#Genie.Router.content_type","page":"Router","title":"Genie.Router.content_type","text":"\n\n\n\n","category":"function"},{"location":"router.html#Genie.Router.content_length","page":"Router","title":"Genie.Router.content_length","text":"\n\n\n\n","category":"function"},{"location":"router.html#Genie.Router.request_type_is","page":"Router","title":"Genie.Router.request_type_is","text":"\n\n\n\n","category":"function"},{"location":"router.html#Genie.Router.request_type","page":"Router","title":"Genie.Router.request_type","text":"\n\n\n\n","category":"function"},{"location":"router.html#Genie.Router.response_type","page":"Router","title":"Genie.Router.response_type","text":"response_type{T}(params::Dict{Symbol,T}) :: Symbol\nresponse_type(params::Params) :: Symbol\n\nReturns the content-type of the current request-response cycle.\n\n\n\n\n\nresponse_type{T}(check::Symbol, params::Dict{Symbol,T}) :: Bool\n\nChecks if the content-type of the current request-response cycle matches check.\n\n\n\n\n\n","category":"function"},{"location":"router.html#Genie.Router.is_static_file","page":"Router","title":"Genie.Router.is_static_file","text":"is_static_file(resource::String) :: Bool\n\nChecks if the requested resource is a static file.\n\n\n\n\n\n","category":"function"},{"location":"router.html#Genie.Router.to_uri","page":"Router","title":"Genie.Router.to_uri","text":"to_uri(resource::String) :: URI\n\nAttempts to convert resource to URI\n\n\n\n\n\n","category":"function"},{"location":"router.html#Genie.Router.serve_static_file","page":"Router","title":"Genie.Router.serve_static_file","text":"serve_static_file(resource::String) :: Response\n\nReads the static file and returns the content as a Response.\n\n\n\n\n\n","category":"function"},{"location":"router.html#Genie.Router.file_extension","page":"Router","title":"Genie.Router.file_extension","text":"file_extension(f) :: String\n\nReturns the file extesion of f.\n\n\n\n\n\n","category":"function"},{"location":"router.html#Genie.Router.file_headers","page":"Router","title":"Genie.Router.file_headers","text":"file_headers(f) :: Dict{String,String}\n\nReturns the file headers of f.\n\n\n\n\n\n","category":"function"},{"location":"commands.html#","page":"Commands","title":"Commands","text":"CurrentModule = Commands","category":"page"},{"location":"commands.html#","page":"Commands","title":"Commands","text":"","category":"page"},{"location":"commands.html#","page":"Commands","title":"Commands","text":"execute\r\nparse_commandline_args\r\ncalled_command","category":"page"},{"location":"commands.html#Genie.Commands.execute","page":"Commands","title":"Genie.Commands.execute","text":"execute(config::Settings) :: Nothing\n\nRuns the requested Genie app command, based on the args passed to the script.\n\n\n\n\n\n","category":"function"},{"location":"commands.html#Genie.Commands.parse_commandline_args","page":"Commands","title":"Genie.Commands.parse_commandline_args","text":"parse_commandline_args() :: Dict{String,Any}\n\nExtracts the command line args passed into the app and returns them as a Dict, possibly setting up defaults. Also, it is used by the ArgParse module to populate the command line help for the app -h.\n\n\n\n\n\n","category":"function"},{"location":"commands.html#Genie.Commands.called_command","page":"Commands","title":"Genie.Commands.called_command","text":"called_command(args::Dict, key::String) :: Bool\n\nChecks whether or not a certain command was invoked by looking at the command line args.\n\n\n\n\n\n","category":"function"},{"location":"requests.html#","page":"Requests","title":"Requests","text":"CurrentModule = Requests","category":"page"},{"location":"requests.html#","page":"Requests","title":"Requests","text":"","category":"page"},{"location":"requests.html#","page":"Requests","title":"Requests","text":"","category":"page"},{"location":"httputils.html#","page":"HttpUtils","title":"HttpUtils","text":"CurrentModule = Genie","category":"page"},{"location":"httputils.html#","page":"HttpUtils","title":"HttpUtils","text":"","category":"page"},{"location":"httputils.html#","page":"HttpUtils","title":"HttpUtils","text":"Base.Dict","category":"page"},{"location":"plugins.html#","page":"Plugins","title":"Plugins","text":"CurrentModule = Plugins","category":"page"},{"location":"plugins.html#","page":"Plugins","title":"Plugins","text":"","category":"page"},{"location":"plugins.html#","page":"Plugins","title":"Plugins","text":"recursive_copy\r\ncongrats\r\nscaffold\r\ninstall","category":"page"},{"location":"plugins.html#Genie.Plugins.recursive_copy","page":"Plugins","title":"Genie.Plugins.recursive_copy","text":"recursive_copy(path::String, dest::String; only_hidden = true, force = false)\n\nUtility function to copy plugin files from package dir to app.\n\n\n\n\n\n","category":"function"},{"location":"plugins.html#Genie.Plugins.congrats","page":"Plugins","title":"Genie.Plugins.congrats","text":"congrats()\n\nShows success message and instructions when scaffolding a plugin.\n\n\n\n\n\n","category":"function"},{"location":"plugins.html#Genie.Plugins.scaffold","page":"Plugins","title":"Genie.Plugins.scaffold","text":"scaffold(plugin_name::String, dest::String = \".\"; force = false)\n\nScaffolds a new plugin as a Julia project\n\n\n\n\n\n","category":"function"},{"location":"plugins.html#Genie.Plugins.install","page":"Plugins","title":"Genie.Plugins.install","text":"install(path::String, dest::String; force = false)\n\nUtility to allow users to install a plugin\n\n\n\n\n\n","category":"function"},{"location":"configuration.html#","page":"Configuration","title":"Configuration","text":"CurrentModule = Configuration","category":"page"},{"location":"configuration.html#","page":"Configuration","title":"Configuration","text":"","category":"page"},{"location":"configuration.html#","page":"Configuration","title":"Configuration","text":"GENIE_VERSION\r\nisdev\r\nisprod\r\nistest\r\nenv\r\nbuildpath\r\nSettings","category":"page"},{"location":"configuration.html#Genie.Configuration.GENIE_VERSION","page":"Configuration","title":"Genie.Configuration.GENIE_VERSION","text":"const GENIE_VERSION\n\nReferences the current Genie version number.\n\n\n\n\n\n","category":"constant"},{"location":"configuration.html#Genie.Configuration.isdev","page":"Configuration","title":"Genie.Configuration.isdev","text":"isdev()  :: Bool\n\nSet of utility functions that return whether or not the current environment is development, production or testing.\n\nExamples\n\njulia> Configuration.isdev()\ntrue\n\njulia> Configuration.isprod()\nfalse\n\n\n\n\n\n","category":"function"},{"location":"configuration.html#Genie.Configuration.isprod","page":"Configuration","title":"Genie.Configuration.isprod","text":"isprod() :: Bool\n\nSet of utility functions that return whether or not the current environment is development, production or testing.\n\nExamples\n\njulia> Configuration.isdev()\ntrue\n\njulia> Configuration.isprod()\nfalse\n\n\n\n\n\n","category":"function"},{"location":"configuration.html#Genie.Configuration.istest","page":"Configuration","title":"Genie.Configuration.istest","text":"istest() :: Bool\n\nSet of utility functions that return whether or not the current environment is development, production or testing.\n\nExamples\n\njulia> Configuration.isdev()\ntrue\n\njulia> Configuration.isprod()\nfalse\n\n\n\n\n\n","category":"function"},{"location":"configuration.html#Genie.Configuration.env","page":"Configuration","title":"Genie.Configuration.env","text":"env() :: String\n\nReturns the current Genie environment.\n\nExamples\n\njulia> Configuration.env()\n\"dev\"\n\n\n\n\n\n","category":"function"},{"location":"configuration.html#Genie.Configuration.buildpath","page":"Configuration","title":"Genie.Configuration.buildpath","text":"buildpath() :: String\n\nConstructs the temp dir where Genie's view files are built.\n\n\n\n\n\n","category":"function"},{"location":"configuration.html#Genie.Configuration.Settings","page":"Configuration","title":"Genie.Configuration.Settings","text":"mutable struct Settings\n\nApp configuration - sets up the app's defaults. Individual options are overwritten in the corresponding environment file.\n\nArguments\n\nserver_port::Int: the port for running the web server (default 8000)\nserver_host::String: the host for running the web server (default \"127.0.0.1\")\nserver_document_root::String: path to the document root (default \"public/\")\nserver_handle_static_files::Bool: if true, Genie will also serve static files. In production, it is recommended to serve static files with a web server like Nginx.\nserver_signature::String: Genie's signature used for tagging the HTTP responses. If empty, it will not be added.\napp_env::String: the environment in which the app is running (dev, test, or prod)\ncors_headers::Dict{String,String}: default Access-Control-* CORS settings\ncors_allowed_origins::Vector{String}: allowed origin hosts for CORS settings\ncache_duraction::Int: cache expiration time in seconds\nlog_level::Logging.LogLevel: logging severity level\nlog_to_file::Bool: if true, information will be logged to file besides REPL\nassets_fingerprinted::Bool: if true, asset fingerprinting is used in the asset pipeline\nsession_key_name::String: the name of the session cookie\nsession_storage::Symbol: the backend adapter for session storage (default File)\ninflector_irregulars::Vector{Tuple{String,String}}: additional irregular singular-plural forms to be used by the Inflector\nrun_as_server::Bool: when true the server thread is launched synchronously to avoid that the script exits\nwebsockets_server::Bool: if true, the websocket server is also started together with the web server\nhtml_parser_close_tag::String: default \" /\". Can be changed to an empty string \"\" so the single tags would not be closed.\n\n\n\n\n\n","category":"type"},{"location":"toolbox.html#","page":"Toolbox","title":"Toolbox","text":"CurrentModule = Toolbox","category":"page"},{"location":"toolbox.html#","page":"Toolbox","title":"Toolbox","text":"","category":"page"},{"location":"toolbox.html#","page":"Toolbox","title":"Toolbox","text":"TaskInfo\r\nTaskResult\r\ntasks\r\nloadtasks\r\nprinttasks\r\nnew","category":"page"},{"location":"toolbox.html#Genie.Toolbox.tasks","page":"Toolbox","title":"Genie.Toolbox.tasks","text":"tasks(; filter_type_name = Symbol()) :: Vector{TaskInfo}\n\nReturns a vector of all registered Genie tasks.\n\n\n\n\n\n","category":"function"},{"location":"toolbox.html#Genie.Toolbox.loadtasks","page":"Toolbox","title":"Genie.Toolbox.loadtasks","text":"tasks(; filter_type_name = Symbol()) :: Vector{TaskInfo}\n\nReturns a vector of all registered Genie tasks.\n\n\n\n\n\n","category":"function"},{"location":"toolbox.html#Genie.Toolbox.printtasks","page":"Toolbox","title":"Genie.Toolbox.printtasks","text":"Prints a list of all the registered Genie tasks to the standard output.\n\n\n\n\n\n","category":"function"},{"location":"toolbox.html#new","page":"Toolbox","title":"new","text":"new\n\nSpecial function available to inner constructors which created a new object of the type. See the manual section on Inner Constructor Methods for more information.\n\n\n\n\n\n","category":"keyword"},{"location":"util.html#","page":"Util","title":"Util","text":"CurrentModule = Util","category":"page"},{"location":"util.html#","page":"Util","title":"Util","text":"","category":"page"},{"location":"util.html#","page":"Util","title":"Util","text":"expand_nullable\r\nfile_name_without_extension\r\nwalk_dir","category":"page"},{"location":"util.html#Genie.Util.expand_nullable","page":"Util","title":"Genie.Util.expand_nullable","text":"expand_nullable{T}(value::Union{Nothing,T}, default::T) :: T\n\nReturns value if it is not nothing - otherwise default.\n\n\n\n\n\n","category":"function"},{"location":"util.html#Genie.Util.file_name_without_extension","page":"Util","title":"Genie.Util.file_name_without_extension","text":"file_name_without_extension(file_name, extension = \".jl\") :: String\n\nRemoves the file extension extension from file_name.\n\n\n\n\n\n","category":"function"},{"location":"util.html#Genie.Util.walk_dir","page":"Util","title":"Genie.Util.walk_dir","text":"function walk_dir(dir, paths = String[]; only_extensions = [\"jl\"], only_files = true, only_dirs = false) :: Vector{String}\n\nRecursively walks dir and produces non directories. If only_files, directories will be skipped. If only_dirs, files will be skipped.\n\n\n\n\n\n","category":"function"},{"location":"encryption.html#","page":"Encryption","title":"Encryption","text":"CurrentModule = Encryption","category":"page"},{"location":"encryption.html#","page":"Encryption","title":"Encryption","text":"","category":"page"},{"location":"encryption.html#","page":"Encryption","title":"Encryption","text":"encrypt\r\ndecrypt\r\nencryption_sauce","category":"page"},{"location":"encryption.html#Genie.Encryption.encrypt","page":"Encryption","title":"Genie.Encryption.encrypt","text":"encrypt{T}(s::T) :: String\n\nEncrypts s.\n\n\n\n\n\n","category":"function"},{"location":"encryption.html#Genie.Encryption.decrypt","page":"Encryption","title":"Genie.Encryption.decrypt","text":"decrypt(s::String) :: String\n\nDecrypts s (a string previously encrypted by Genie).\n\n\n\n\n\n","category":"function"},{"location":"cookies.html#","page":"Cookies","title":"Cookies","text":"CurrentModule = Cookies","category":"page"},{"location":"cookies.html#","page":"Cookies","title":"Cookies","text":"","category":"page"},{"location":"cookies.html#","page":"Cookies","title":"Cookies","text":"get\r\nset!\r\nDict\r\nnullablevalue\r\ngetcookies","category":"page"},{"location":"cookies.html#Genie.Cookies.get","page":"Cookies","title":"Genie.Cookies.get","text":"get(payload::Union{HTTP.Response,HTTP.Request}, key::Union{String,Symbol}, default::T; encrypted::Bool = true)::T where T\n\nAttempts to get the Cookie value stored at key within payload. If the key is not set, the default value is returned.\n\nArguments\n\npayload::Union{HTTP.Response,HTTP.Request}: the request or response object containing the Cookie headers\nkey::Union{String,Symbol}: the name of the cookie value\ndefault::T: default value to be returned if no cookie value is set at key\nencrypted::Bool: if true the value stored on the cookie is automatically decrypted\n\n\n\n\n\nget(res::HTTP.Response, key::Union{String,Symbol}) :: Union{Nothing,String}\n\nRetrieves a value stored on the cookie as key from the Respose object.\n\nArguments\n\npayload::Union{HTTP.Response,HTTP.Request}: the request or response object containing the Cookie headers\nkey::Union{String,Symbol}: the name of the cookie value\nencrypted::Bool: if true the value stored on the cookie is automatically decrypted\n\n\n\n\n\nget(req::Request, key::Union{String,Symbol}) :: Union{Nothing,String}\n\nRetrieves a value stored on the cookie as key from the Request object.\n\nArguments\n\nreq::HTTP.Request: the request or response object containing the Cookie headers\nkey::Union{String,Symbol}: the name of the cookie value\nencrypted::Bool: if true the value stored on the cookie is automatically decrypted\n\n\n\n\n\n","category":"function"},{"location":"cookies.html#Genie.Cookies.set!","page":"Cookies","title":"Genie.Cookies.set!","text":"set!(res::HTTP.Response, key::Union{String,Symbol}, value::Any, attributes::Dict; encrypted::Bool = true) :: HTTP.Response\n\nSets value under the key label on the Cookie.\n\nArguments\n\nres::HTTP.Response: the HTTP.Response object\nkey::Union{String,Symbol}: the key for storing the cookie value\nvalue::Any: the cookie value\nattributes::Dict: additional cookie attributes, such as Path or HttpOnly\nencrypted::Bool: if true the value is stored encoded\n\n\n\n\n\n","category":"function"},{"location":"cookies.html#Base.Dict","page":"Cookies","title":"Base.Dict","text":"Dict([itr])\n\nDict{K,V}() constructs a hash table with keys of type K and values of type V. Keys are compared with isequal and hashed with hash.\n\nGiven a single iterable argument, constructs a Dict whose key-value pairs are taken from 2-tuples (key,value) generated by the argument.\n\nExamples\n\njulia> Dict([(\"A\", 1), (\"B\", 2)])\nDict{String,Int64} with 2 entries:\n  \"B\" => 2\n  \"A\" => 1\n\nAlternatively, a sequence of pair arguments may be passed.\n\njulia> Dict(\"A\"=>1, \"B\"=>2)\nDict{String,Int64} with 2 entries:\n  \"B\" => 2\n  \"A\" => 1\n\n\n\n\n\n","category":"type"},{"location":"cookies.html#Genie.Cookies.nullablevalue","page":"Cookies","title":"Genie.Cookies.nullablevalue","text":"nullablevalue(payload::Union{HTTP.Response,HTTP.Request}, key::Union{String,Symbol}; encrypted::Bool = true)\n\nAttempts to retrieve a cookie value stored at key in the payload object and returns a Union{Nothing,String}\n\nArguments\n\npayload::Union{HTTP.Response,HTTP.Request}: the request or response object containing the Cookie headers\nkey::Union{String,Symbol}: the name of the cookie value\nencrypted::Bool: if true the value stored on the cookie is automatically decrypted\n\n\n\n\n\n","category":"function"},{"location":"cookies.html#Genie.Cookies.getcookies","page":"Cookies","title":"Genie.Cookies.getcookies","text":"getcookies(req::HTTP.Request) :: Vector{HTTP.Cookies.Cookie}\n\nExtracts cookies from within req\n\n\n\n\n\ngetcookies(req::HTTP.Request) :: Vector{HTTP.Cookies.Cookie}\n\nExtracts cookies from within req, filtering them by matching name.\n\n\n\n\n\n","category":"function"},{"location":"appserver.html#","page":"AppServer","title":"AppServer","text":"CurrentModule = AppServer","category":"page"},{"location":"appserver.html#","page":"AppServer","title":"AppServer","text":"","category":"page"},{"location":"appserver.html#","page":"AppServer","title":"AppServer","text":"ServersCollection\r\nSERVERS\r\nstartup\r\ndown\r\nupdate_config\r\nhandle_request\r\nsetup_http_handler\r\nsetup_ws_handler\r\nhandle_ws_request","category":"page"},{"location":"appserver.html#Genie.AppServer.ServersCollection","page":"AppServer","title":"Genie.AppServer.ServersCollection","text":"ServersCollection(webserver::Union{Task,Nothing}, websockets::Union{Task,Nothing})\n\nRepresents a object containing references to Genie's web and websockets servers.\n\n\n\n\n\n","category":"type"},{"location":"appserver.html#Genie.AppServer.SERVERS","page":"AppServer","title":"Genie.AppServer.SERVERS","text":"SERVERS\n\nServersCollection constant containing references to the current app's web and websockets servers.\n\n\n\n\n\n","category":"constant"},{"location":"appserver.html#Genie.AppServer.startup","page":"AppServer","title":"Genie.AppServer.startup","text":"startup(port::Int = Genie.config.server_port, host::String = Genie.config.server_host;\n    ws_port::Int = Genie.config.websockets_port, async::Bool = ! Genie.config.run_as_server) :: ServersCollection\n\nStarts the web server.\n\nArguments\n\nport::Int: the port used by the web server\nhost::String: the host used by the web server\nws_port::Int: the port used by the Web Sockets server\nasync::Bool: run the web server task asynchronously\n\nExamples\n\njulia> up(8000, \"127.0.0.1\", async = false)\n[ Info: Ready!\nWeb Server starting at http://127.0.0.1:8000\n\n\n\n\n\n","category":"function"},{"location":"appserver.html#Genie.AppServer.down","page":"AppServer","title":"Genie.AppServer.down","text":"downdown(; webserver::Bool = true, websockets::Bool = true) :: ServersCollection\n\nShuts down the servers optionally indicating which of the webserver and websockets servers to be stopped.\n\n\n\n\n\n","category":"function"},{"location":"appserver.html#Genie.AppServer.update_config","page":"AppServer","title":"Genie.AppServer.update_config","text":"update_config(port::Int, host::String, ws_port::Int) :: Nothing\n\nUpdates the corresponding Genie configurations to the corresponding values for   port, host, and ws_port, if these are passed as arguments when starting up the server.\n\n\n\n\n\n","category":"function"},{"location":"appserver.html#Genie.AppServer.handle_request","page":"AppServer","title":"Genie.AppServer.handle_request","text":"handle_request(req::HTTP.Request, res::HTTP.Response, ip::IPv4 = IPv4(Genie.config.server_host)) :: HTTP.Response\n\nHttp server handler function - invoked when the server gets a request.\n\n\n\n\n\n","category":"function"},{"location":"appserver.html#Genie.AppServer.setup_http_handler","page":"AppServer","title":"Genie.AppServer.setup_http_handler","text":"setup_http_handler(req::HTTP.Request, res::HTTP.Response = HTTP.Response()) :: HTTP.Response\n\nConfigures the handler for the HTTP Request and handles errors.\n\n\n\n\n\n","category":"function"},{"location":"appserver.html#Genie.AppServer.setup_ws_handler","page":"AppServer","title":"Genie.AppServer.setup_ws_handler","text":"setup_ws_handler(req::HTTP.Request, ws_client) :: Nothing\n\nConfigures the handler for WebSockets requests.\n\n\n\n\n\n","category":"function"},{"location":"appserver.html#Genie.AppServer.handle_ws_request","page":"AppServer","title":"Genie.AppServer.handle_ws_request","text":"handle_ws_request(req::HTTP.Request, msg::String, ws_client, ip::IPv4 = IPv4(Genie.config.server_host)) :: String\n\nHttp server handler function - invoked when the server gets a request.\n\n\n\n\n\n","category":"function"},{"location":"deploy_heroku.html#","page":"Deploy Heroku","title":"Deploy Heroku","text":"CurrentModule = Deploy.Heroku","category":"page"},{"location":"deploy_heroku.html#","page":"Deploy Heroku","title":"Deploy Heroku","text":"","category":"page"},{"location":"deploy_heroku.html#","page":"Deploy Heroku","title":"Deploy Heroku","text":"createapp\r\npush\r\nrelease\r\nopen\r\nlogin\r\nlogs","category":"page"},{"location":"deploy_heroku.html#Genie.Deploy.Heroku.createapp","page":"Deploy Heroku","title":"Genie.Deploy.Heroku.createapp","text":"createapp(appname::String; region::String = \"us\")\n\nRuns the heroku create command to create a new app in the indicated region. See https://devcenter.heroku.com/articles/heroku-cli-commands#heroku-apps-create-app\n\n\n\n\n\n","category":"function"},{"location":"deploy_heroku.html#Genie.Deploy.Heroku.push","page":"Deploy Heroku","title":"Genie.Deploy.Heroku.push","text":"push(appname::String; apptype::String = \"web\")\n\nInvokes the heroku container:push which builds, then pushes Docker images to deploy your Heroku app. See https://devcenter.heroku.com/articles/heroku-cli-commands#heroku-container-push\n\n\n\n\n\n","category":"function"},{"location":"deploy_heroku.html#Genie.Deploy.Heroku.release","page":"Deploy Heroku","title":"Genie.Deploy.Heroku.release","text":"release(appname::String; apptype::String = \"web\")\n\nInvokes the keroku container:release which releases previously pushed Docker images to your Heroku app. See https://devcenter.heroku.com/articles/heroku-cli-commands#heroku-container-push\n\n\n\n\n\n","category":"function"},{"location":"deploy_heroku.html#Genie.Deploy.Heroku.open","page":"Deploy Heroku","title":"Genie.Deploy.Heroku.open","text":"open(appname::String)\n\nInvokes the heroku open command which open the app in a web browser. See https://devcenter.heroku.com/articles/heroku-cli-commands#heroku-apps-open-path\n\n\n\n\n\n","category":"function"},{"location":"deploy_heroku.html#Genie.Deploy.Heroku.login","page":"Deploy Heroku","title":"Genie.Deploy.Heroku.login","text":"login()\n\nInvokes the heroku container:login to log in to Heroku Container Registry, See https://devcenter.heroku.com/articles/heroku-cli-commands#heroku-container-login\n\n\n\n\n\n","category":"function"},{"location":"deploy_heroku.html#Genie.Deploy.Heroku.logs","page":"Deploy Heroku","title":"Genie.Deploy.Heroku.logs","text":"logs(appname::String; lines::Int = 1_000)\n\nDisplay recent heroku log output. https://devcenter.heroku.com/articles/heroku-cli-commands#heroku-logs\n\n\n\n\n\n","category":"function"},{"location":"flash.html#","page":"Flash","title":"Flash","text":"CurrentModule = Flash","category":"page"},{"location":"flash.html#","page":"Flash","title":"Flash","text":"","category":"page"},{"location":"flash.html#","page":"Flash","title":"Flash","text":"flash\r\nflash_has_message","category":"page"},{"location":"flash.html#Genie.Flash.flash","page":"Flash","title":"Genie.Flash.flash","text":"flash()\n\nReturns the flash dict object associated with the current HTTP request.\n\n\n\n\n\nflash(value::Any) :: Nothing\n\nStores value onto the flash.\n\n\n\n\n\n","category":"function"},{"location":"flash.html#Genie.Flash.flash_has_message","page":"Flash","title":"Genie.Flash.flash_has_message","text":"flash_has_message() :: Bool\n\nChecks if there's any value on the flash storage\n\n\n\n\n\n","category":"function"},{"location":"index.html#","page":"Home","title":"Home","text":"(Image: Genie Logo)","category":"page"},{"location":"index.html#","page":"Home","title":"Home","text":"(Image: Stable) (Image: Latest)","category":"page"},{"location":"index.html#Genie-1","page":"Home","title":"Genie","text":"","category":"section"},{"location":"index.html#The-highly-productive-Julia-web-framework-1","page":"Home","title":"The highly productive Julia web framework","text":"","category":"section"},{"location":"index.html#","page":"Home","title":"Home","text":"Genie is Julia web framework that provides a streamlined and efficient workflow for developing modern web applications. It builds on Julia's strengths (high-level, high-performance, dynamic, JIT compiled), exposing a rich API and a powerful toolset for productive web development.","category":"page"},{"location":"index.html#Current-status-1","page":"Home","title":"Current status","text":"","category":"section"},{"location":"index.html#","page":"Home","title":"Home","text":"Genie is compatible with Julia v1.2 and up.","category":"page"},{"location":"index.html#","page":"Home","title":"Home","text":"","category":"page"},{"location":"index.html#Documentation-1","page":"Home","title":"Documentation","text":"","category":"section"},{"location":"index.html#","page":"Home","title":"Home","text":"https://genieframework.github.io/Genie.jl/","category":"page"},{"location":"index.html#","page":"Home","title":"Home","text":"","category":"page"},{"location":"index.html#Acknowledgements-1","page":"Home","title":"Acknowledgements","text":"","category":"section"},{"location":"index.html#","page":"Home","title":"Home","text":"Genie uses a multitude of packages that have been kindly contributed by the Julia community.\nThe awesome Genie logo was designed by Alvaro Casanova.","category":"page"},{"location":"exceptions.html#","page":"Exceptions","title":"Exceptions","text":"CurrentModule = Exceptions","category":"page"},{"location":"exceptions.html#","page":"Exceptions","title":"Exceptions","text":"","category":"page"},{"location":"exceptions.html#","page":"Exceptions","title":"Exceptions","text":"ExceptionalResponse\r\nRuntimeException\r\nInternalServerException\r\nNotFoundException","category":"page"},{"location":"exceptions.html#Genie.Exceptions.ExceptionalResponse","page":"Exceptions","title":"Genie.Exceptions.ExceptionalResponse","text":"struct ExceptionalResponse <: Exception\n\nA type of exception which wraps an HTTP Response object. The thrown exception will propagate until it is caught up the app stack or ultimately by Genie and the wrapped response is sent to the client.\n\nExample\n\nIf the user is not authenticated, an ExceptionalResponse is thrown - if the exception is not caught in the app's stack, Genie will catch it and return the wrapped Response object, forcing an HTTP redirect to the login page.\n\nisauthenticated() || throw(ExceptionalResponse(redirect(:show_login)))\n\n\n\n\n\n","category":"type"},{"location":"exceptions.html#Genie.Exceptions.RuntimeException","page":"Exceptions","title":"Genie.Exceptions.RuntimeException","text":"RuntimeException\n\nRepresents an unexpected and unhandled runtime exceptions. An error event will be logged and the exception will be sent to the client, depending on the environment (the error stack is dumped by default in dev mode or an error message is displayed in production).\n\nIt allows defining custom error message and info, as well as an error code, in addition to the exception object.\n\nArguments\n\nmessage::String\ninfo::String\ncode::Int\nex::Union{Nothing,Exception}\n\n\n\n\n\n","category":"type"},{"location":"exceptions.html#Genie.Exceptions.InternalServerException","page":"Exceptions","title":"Genie.Exceptions.InternalServerException","text":"struct InternalServerException <: Exception\n\nDedicated exception type for server side exceptions. Results in a 500 error by default.\n\nArguments\n\nmessage::String\ninfo::String\ncode::Int\n\n\n\n\n\n","category":"type"},{"location":"exceptions.html#Genie.Exceptions.NotFoundException","page":"Exceptions","title":"Genie.Exceptions.NotFoundException","text":"struct NotFoundException <: Exception\n\nSpecialized exception representing a not found resources. Results in a 404 response being sent to the client.\n\nArguments\n\nmessage::String\ninfo::String\ncode::Int\nresource::String\n\n\n\n\n\n","category":"type"}]
}
